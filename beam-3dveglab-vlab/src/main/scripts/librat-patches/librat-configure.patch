*** librat/configure.orig	2013-05-03 10:57:52.000000000 +0200
--- librat/configure	2014-12-10 17:47:45.886618092 +0100
***************
*** 25,30 ****
--- 25,32 ----
  setenv TMP /tmp
  setenv HOSTNAME `uname -n`
  set dodownload = 1
+ set domingw32 = 0
+ set domingw64 = 0
  set domake = 1
  #set domain = (`domainname`)
  set CCS = (gcc cc)
***************
*** 32,39 ****
  set CFLAGSS = (-L. -fPIC)
  set OPTS = (-g -O4 -O -g)
  set MAKES = (gmake make)
! set DIRS = (src/lib src/start bin/csh bin/$ARCH)
! if (! $?BPMS )set BPMS = $HOME/bpms
  mkdir -p $BPMS/src/lib
  echo $BPMS > $BPMS/src/lib/BPMS
  if (! $?MIRROR )set MIRROR = "www2.geog.ucl.ac.uk/~plewis/bpms"
--- 34,42 ----
  set CFLAGSS = (-L. -fPIC)
  set OPTS = (-g -O4 -O -g)
  set MAKES = (gmake make)
! set AR = (ar)
! set RANLIB = (ranlib)
! if (! $?BPMS )set BPMS = ${HOME}/bpms
  mkdir -p $BPMS/src/lib
  echo $BPMS > $BPMS/src/lib/BPMS
  if (! $?MIRROR )set MIRROR = "www2.geog.ucl.ac.uk/~plewis/bpms"
***************
*** 111,119 ****
     set README = 1
     shift argv
     breaksw
    case -help:
    default:
!    echo "$cmd [-readme | -version] [-cc $CCS] [-lidar] [-make $MAKES] [-tmp $TMP] [-cflags $CFLAGSS] [-nodownload] [-g|-O|-O1-4] [-opt $OPTS] [-clean] [-help]"
     exit 1
     breaksw
   endsw
--- 114,130 ----
     set README = 1
     shift argv
     breaksw
+   case -mingw32
+    set domingw32 = 1
+    shift argv
+    breaksw
+   case -mingw64
+    set domingw64 = 1
+    shift argv
+    breaksw
    case -help:
    default:
!    echo "$cmd [-readme | -version] [-cc $CCS] [-lidar] [-make $MAKES] [-tmp $TMP] [-cflags $CFLAGSS] [-nodownload] [-g|-O|-O1-4] [-mingw32] [-mingw64] [-opt $OPTS] [-clean] [-help]"
     exit 1
     breaksw
   endsw
***************
*** 130,135 ****
--- 141,173 ----
    cat "$BPMS"/src/lib/README
    exit 1
  endif
+ 
+ #############
+ # special case cross-compiling for windows
+ #############
+ 
+ if (($domingw32 == 1) || ($domingw64 == 1)) then
+ 
+   set CFLAGS_ = "-fPIC"
+   set OPT     = "-g"
+   set MAKE    = "gmake"
+ 
+   if ($domingw32 == 1) then
+     setenv ARCH "mingw32"
+     set CC      = "i686-w64-mingw32-gcc"
+     set AR      = "i686-w64-mingw32-ar"
+     set DYN     = "i686-w64-mingw32-ld -G" 
+     set RANLIB  = "i686-w64-mingw32-ranlib"
+   else
+     setenv ARCH "mingw64"
+     set CC      = "x86_64-w64-mingw32-gcc"
+     set AR      = "x86_64-w64-mingw32-ar"
+     set DYN     = "x86_64-w64-mingw32-ld -G" 
+     set RANLIB  = "x86_64-w64-mingw32-ranlib"
+   endif
+ 
+ else
+ 
  #############
  # compiler test
  ############
***************
*** 242,250 ****
--- 280,292 ----
  endif
  \rm -f $TMP/test.c $TMP/test.o $TMP/test.so $TMP/test
  
+ endif
+ 
  ########
  # mkdir 
  ########
+ set DIRS = (src/lib src/start bin/csh bin/$ARCH)
+ 
  @ i = 1
  while ($i <= $#DIRS)
    set DIR = $DIRS[$i]
***************
*** 360,370 ****
   echo ""
   cd "$BPMS"/src/lib
  endif
- 
  ########
  # chmod
  ########
  chmod +x ../../bin/csh/*
  ########
  # compile
  ########
--- 402,426 ----
   echo ""
   cd "$BPMS"/src/lib
  endif
  ########
  # chmod
  ########
  chmod +x ../../bin/csh/*
+ 
+ ########
+ # patches introduced to compile win32 binaries
+ ########
+ echo "patching ..."
+ cd "$BPMS"/..
+ foreach p (librat-patches/librat-patch-*.patch)
+   patch -p 1 < $p
+ end
+ if ( ($domingw32 == 1) || ($domingw64 == 1) ) then
+   cp -p librat-patches/librat-testMe.bat "$BPMS"/src/start/testMe.bat
+ endif
+ # "start" is reserved (on win32) - rename src to reduce makefile churn
+ mv "$BPMS"/src/start/start.c "$BPMS"/src/start/ratstart.c
+ 
  ########
  # compile
  ########
***************
*** 376,399 ****
  set status = 1
  echo -n "compiling in "
  echo $cwd
! ${MAKE} "BPMS=${BPMS}" $CLEAN all "CC=${CC}" "DYN=${DYN}" "MAKE=${MAKE}" "CFLAGS=${CFLAGS_} $OPT" 
  if ( $status != 0 ) then
   echo "${MAKE} \"BPMS=${BPMS}\" $CLEAN all \"CC=${CC}\" \"DYN=${DYN}\" \"MAKE=${MAKE}\" \"CFLAGS=${CFLAGS_} $OPT\""
   echo "failed to compile library ..."
   exit 1
  endif
  
  ########
  # start
  ########
  
  cd "$BPMS"/src/start
! ${MAKE} "BPMS=${BPMS}" "CC=${CC}" "DYN=${DYN}" "MAKE=${MAKE}" "CFLAGS=${CFLAGS_} $OPT"  
  if ( $status != 0 ) then
   echo "failed to compile start ..."
   exit 1
  endif
  
  ########
  # test start
  ########
--- 432,469 ----
  set status = 1
  echo -n "compiling in "
  echo $cwd
! ${MAKE} "BPMS=${BPMS}" $CLEAN all "CC=${CC}" "DYN=${DYN}" "MAKE=${MAKE}" "RANLIB=${RANLIB}" "AR=${AR}" "CFLAGS=${CFLAGS_} $OPT" 
  if ( $status != 0 ) then
   echo "${MAKE} \"BPMS=${BPMS}\" $CLEAN all \"CC=${CC}\" \"DYN=${DYN}\" \"MAKE=${MAKE}\" \"CFLAGS=${CFLAGS_} $OPT\""
   echo "failed to compile library ..."
   exit 1
  endif
  
+ if (($domingw32 == 1) || ($domingw64 == 1)) then
+   foreach f ("$BPMS"/bin/${ARCH}/*) 
+     mv $f ${f}.exe
+   end
+ endif
+ 
  ########
  # start
  ########
  
+ if (($domingw32 == 1) || ($domingw64 == 1)) then
+   set TARGET = ratstart.exe
+ else
+   set TARGET = ratstart
+ endif
+ 
  cd "$BPMS"/src/start
! ${MAKE} "BPMS=${BPMS}" "CC=${CC}" "DYN=${DYN}" "MAKE=${MAKE}" "CFLAGS=${CFLAGS_} $OPT" ${TARGET}  
  if ( $status != 0 ) then
   echo "failed to compile start ..."
   exit 1
  endif
  
+ if (($domingw32 == 0) && ($domingw64 == 0)) then
+ 
  ########
  # test start
  ########
***************
*** 407,409 ****
--- 477,480 ----
   exit 1
  endif
  
+ endif
